apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api.name" . }}
  labels: {{ include "api.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "api.name" . }}
      instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
      {{- if .Values.prometheus.enabled }}
        prometheus.io/scrape: "true"
      {{- end }}
      {{- if .Values.annotations }}
      {{- .Values.annotations | toYaml | trimSuffix "\n" | nindent 8 }}
      {{- end }}
      labels:
        app: {{ include "api.name" . }}
        instance: {{ .Release.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.deployment.antiaffinity.enabled }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - {{ include "api.name" . }}
              topologyKey: "kubernetes.io/hostname"
      {{- end }}
      containers:
        - name: {{ include "api.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.config }}
          volumeMounts:
             - name: configs
               mountPath: {{.Values.configPath}}{{.Values.configFilename}}
               subPath: {{.Values.configFilename}}
             {{- if .Values.certs }}
             - name: certs
               {{- if eq .Values.certsMountPath "/domain/app/" }}
               mountPath: "{{ .Values.certsMountPath }}/public.crt"
               subPath: public.crt
               {{- else }}
               mountPath: {{ .Values.certsMountPath }}
               subPath: {{ .Values.certsMountSubPath }}
               {{- end }}
             {{- end }}
          {{- end }}
          {{- if .Values.ports }}
          ports:
          {{- toYaml .Values.ports | nindent 12 }}
          {{- end}}
          {{- if .Values.livenessProbe }}
          livenessProbe:
            httpGet:
              path: {{ default "/healthz" .Values.livenessProbe.path }}
              port: {{ default "http" .Values.livenessProbe.port }}
            initialDelaySeconds: {{ default 0 .Values.livenessProbe.initialDelaySeconds }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            httpGet:
              path: {{ default "/healthz" .Values.readinessProbe.path }}
              port: {{ default "http" .Values.readinessProbe.port }}
            initialDelaySeconds: {{ default 0 .Values.livenessProbe.initialDelaySeconds }}
          {{- end }}
          {{- if .Values.resources}}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          {{- if or .Values.secrets .Values.env}}
          env:
          {{- if .Values.env -}}
          {{- toYaml .Values.env | nindent 12 }}
          {{- end -}}
          {{- if .Values.addEnv -}}
          {{- toYaml .Values.addEnv | nindent 12 }}
          {{- end -}}
          {{- if .Values.secrets}}
            {{- range $key, $value := .Values.secrets }}
            - name: {{$key | upper}}
              valueFrom:
                secretKeyRef:
                  name: {{ template "api.name" $ }}
                  key: {{ $key }}
            {{- end }}
          {{- end}}
          {{- end}}
      {{- if .Values.config }}
      volumes:
        - name: configs
          configMap:
            name: {{ include "api.name" . }}
        {{- if and .Values.cache.enabled .Values.cacheConfig}}
        - name: configs-cache
          configMap:
            name: {{ include "api.name" . }}-cache
        {{- end }}
        {{- if .Values.certs }}
        - name: certs
          secret:
              secretName: {{ include "api.name" . }}-certs
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
    {{- end }}


